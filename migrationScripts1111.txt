bundle exec rake neo4j:generate_schema_migration[constraint,NeoNode,uuid]
bundle exec rake neo4j:generate_schema_migration[index,NeoNode,kind]
bundle exec rake neo4j:migrate

bundle exec rake neo4j:generate_schema_migration[constraint,NeoEdge,uuid]
bundle exec rake neo4j:generate_schema_migration[index,NeoEdge, kind]
bundle exec rake neo4j:migrate

bundle exec rake neo4j:generate_schema_migration[constraint,NeoGraph,uuid]
bundle exec rake neo4j:generate_schema_migration[index,NeoGraph, kind]
bundle exec rake neo4j:migrate

bundle exec rake neo4j:generate_schema_migration[constraint,NeoState,uuid]
bundle exec rake neo4j:generate_schema_migration[constraint,NeoUser,uuid]
bundle exec rake neo4j:generate_schema_migration[constraint,NeoUG,uuid]
bundle exec rake neo4j:generate_schema_migration[constraint,NeoGS,uuid]
bundle exec rake neo4j:generate_schema_migration[constraint,NeoFirst,uuid]

//temp: demo game

# Demo Student's Survival

#user

#state
state = NeoState.create(ch_name: "Sanya", stats: { hp: 100, money: 66.6 }, inventory: {pencil: 1})
#graph
graph = NeoGraph.create(title: "demo_graph", text: "demo ghraph of the demo /game/ Student's Survival")

#nodes
node0 = NeoNode.create(title: "Start", text: "Start", kind: :start)
node1 = NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node2 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node3 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node4 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node5 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node6 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node7 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node8 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node9 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node10 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :finish)
node11 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node12 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node13 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node14 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :finish)
node15 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :finish)
node16 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :finish)
node17 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :finish)
node18 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node19 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node20 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)
node21 =  NeoNode.create(title: "Choose", text: "Choose your character:", kind: :inbetween)

#relations
rel0 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node0, to_node: node1 )
rel1 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node1, to_node: node2 )
rel2 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node1, to_node: node3 )
rel3 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node1, to_node: node4 )
rel4 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node2, to_node: node5 )
rel5 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node3, to_node: node5 )
rel6 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node4, to_node: node5 )
rel7 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node5, to_node: node6 )
rel8 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node5, to_node: node7 )
rel9 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node5, to_node: node8 )
rel10 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node5, to_node: node19 )
rel11 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node7, to_node: node8 )
rel12 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node6, to_node: node19 )
rel13 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node8, to_node: node19 )
rel14 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node20, to_node: node11 )
rel15 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node20, to_node: node18 )
rel16 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node20, to_node: node10 )
rel17 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node11, to_node: node12 )
rel18 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node11, to_node: node12 )
rel19 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node18, to_node: node13 )
rel20 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node12, to_node: node13 )
rel21 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node19, to_node: node20 )
rel22 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node19, to_node: node20 )
rel23 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node19, to_node: node20 )
rel24 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node13, to_node: node14 )
rel25 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node13, to_node: node15 )
rel26 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node13, to_node: node16 )
rel27 = NeoEdge.create(title: "r0", text: "fom 0 to 1", you_need: " not yet implemented  ", you_get: " not yet implemented ", from_node: node13, to_node: node17 )

rel_ug = NeoUG.create(from_node: user, to_node: graph)
rel_gs = NeoGS.create(from_node: graph, to_node: state)
rel_first = NeoFirst.create(from_node graph, to_node: node0)

